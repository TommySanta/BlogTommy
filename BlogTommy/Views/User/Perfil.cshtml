@using System.Linq


<head>
    
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="~/css/PerfilUser.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert2/11.7.32/sweetalert2.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert2/11.7.32/sweetalert2.all.min.js"></script>
</head>
<style>
    :root {
        --primary-color: #0056b3;
        --primary-light: #3498db;
        --primary-dark: #003366;
        --secondary-color: #2c3e50;
        --light-bg: #f8f9fa;
        --text-light: #f8f9fa;
        --card-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        --hover-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        --border-radius: 15px;
        --transition-speed: 0.35s;
    }




    /* Animación de fondo mejorada */
    .bg {
        animation: slide 12s ease-in-out infinite alternate;
        background-image: linear-gradient(-60deg, var(--primary-dark) 50%, var(--primary-light) 50%);
        bottom: 0;
        left: -50%;
        opacity: 0.6;
        position: fixed;
        right: -50%;
        top: 0;
        z-index: -1;
    }

    .bg2 {
        animation-direction: alternate-reverse;
        animation-duration: 14s;
    }

    .bg3 {
        animation-duration: 16s;
    }

    @@keyframes slide {
        0% {
            transform: translateX(-25%);
        }

        100% {
            transform: translateX(25%);
        }
    }
</style>
<body>
    <!-- Fondo animado -->
    <div class="bg"></div>
    <div class="bg bg2"></div>
    <div class="bg bg3"></div>

    <div class="container">
        <header class="mi-perfil">
            <h1>Mi Perfil</h1>
            <div class="header-actions">
                <button id="security-btn" class="btn btn-security" onclick="toggleSecurity() ">Seguridad de la cuenta</button>
                <button class="btn btn-logout" onclick="location.href='@Url.Action("Logout", "User")'">Cerrar Sesión</button>
            </div>
        </header>

        <!-- Sección 1: Información Básica -->
        <section id="info-basica" class="profile-section">
            <div class="section-title">
                <h2>Información Básica</h2>
            </div>
            <div class="info-item">
                <div class="info-label">Nombre de usuario:</div>
                <div class="info-value">. @Model.User.Username</div>
            </div>
            <div class="info-item">
                <div class="info-label">Correo electrónico: </div>
                <div class="info-value">@Model.User.Email</div>
            </div>
            <div class="info-item">
                <div class="info-label">Fecha de registro: </div>
                <div class="info-value">@Model.User.CreatedAt.ToString("dd 'de' MMMM 'de' yyyy")</div>
            </div>
        </section>

        <!-- Sección 2: Configuración de Seguridad -->
        <section id="seguridad" class="profile-section">
            <div class="section-title">
                <h2>Configuración de Seguridad</h2>
            </div>

            <!-- Cambiar Contraseña -->
            <div id="password-change">
                <h3>Cambiar Contraseña</h3>
                <form id="password-form" method="post" action="@Url.Action("CambiarContraseña", "User")">
                    <div class="form-group">
                        <label for="current-password">Contraseña actual:</label>
                        <input type="password" name="currentPassword" id="current-password" required>
                    </div>
                    <div class="form-group">
                        <label for="new-password">Nueva contraseña:</label>
                        <input type="password" name="newPassword" id="new-password" required>
                    </div>
                    <div class="form-group">
                        <label for="confirm-password">Confirmar nueva contraseña:</label>
                        <input type="password" name="confirmPassword" id="confirm-password" required>
                    </div>
                    <button type="submit" class="btn btn-primary">Actualizar Contraseña</button>
                </form>
            </div>

            <!-- Eliminar Cuenta -->
            <div id="account-delete" style="margin-top: 30px;">
                <h3>Eliminar Cuenta</h3>
                <p>Esta acción no se puede deshacer. Se eliminarán todos tus posts, comentarios y datos personales.</p>
                <button type="button" class="btn btn-danger" onclick="showDeleteConfirmation()">Eliminar mi cuenta</button>
            </div>
        </section>

        <!-- Sección 3: Actividad del Usuario -->
        <section id="actividad" class="profile-section">
            <div class="section-title">
                <h2>Actividad del Usuario</h2>
            </div>

            <!-- Sección 2: Mis Publicaciones -->
            <div id="mis-publicaciones" class="mb-4">
                <h3>Mis Publicaciones</h3>
                <div class="post-list overflow-auto" style="max-height: 500px;">
                    @if (Model.Publicaciones != null && Model.Publicaciones.Count > 0)
                    {
                        @foreach (var post in Model.Publicaciones)
                        {
                            <div class="post-item d-flex justify-content-between align-items-center p-2 border-bottom">
                                <div class="post-content">
                                    <a href="@Url.Action("PostDetails", "Post", new { id = post.Id })" class="post-title">@post.Title</a>
                                    <div class="post-meta text-muted">
                                        <span class="post-date">Publicado: @post.CreatedAt.ToString("dd 'de' MMMM, yyyy")</span>
                                        <span class="comment-count">
                                            <i class="fas fa-comment"></i> @post.Comments.Count comentarios
                                        </span>
                                    </div>
                                </div>
                                <div class="post-actions">
                                    <a href="@Url.Action("Edit", "Post", new { id = post.Id })"
                                       class="btn btn-primary btn-sm me-2"
                                       title="Editar Post"
                                       aria-label="Editar publicación @post.Title">
                                        <i class="fas fa-edit"></i> Editar
                                    </a>
                                    <button class="btn btn-danger btn-sm"
                                            onclick="deletePost(@post.Id)"
                                            title="Eliminar Post"
                                            aria-label="Eliminar publicación @post.Title">
                                        <i class="fas fa-trash"></i> Eliminar
                                    </button>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="alert alert-info text-center">
                            <i class="fas fa-info-circle"></i> Aún no has creado ningún post. ¡Comparte tus conocimientos!
                        </div>
                    }
                </div>
            </div>


            <!-- Posts en los que has comentado -->
            <div id="posts-comentados">
                <h3>Posts Comentados</h3>
                @if (Model.PostsComentados != null && Model.PostsComentados.Count > 0)
                {
                    <div class="comment-posts-list" style="max-height: 500px; overflow-y: auto;">
                        @foreach (var post in Model.PostsComentados)
                        {
                            <div class="post-item">
                                <div class="post-content">
                                    <a href="@Url.Action("PostDetails", "Post", new { id = post.Id })" class="post-title">@post.Title</a>
                                    <div class="post-meta">
                                        <span class="post-date">Publicado: @post.CreatedAt.ToString("dd 'de' MMMM, yyyy")</span>
                                        <span class="comment-count"><i class="fas fa-comment"></i> @(post.Comments?.Count ?? 0) comentarios</span>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="alert alert-info">
                        <i class="fas fa-info-circle"></i> Aún no has comentado en ningún post. ¡Anímate a comentar algo!
                    </div>
                }
            </div>
        </section>

        <!-- Modal de confirmación para eliminar cuenta -->
        <div id="delete-modal" class="modal">
            <div class="modal-content">
                <span class="close" onclick="hideDeleteConfirmation()">&times;</span>
                <h3>¿Estás seguro?</h3>
                <p>Esta acción eliminará permanentemente tu cuenta y todo su contenido. Esta acción no se puede deshacer.</p>
                <div class="form-group">
                    <label for="confirm-delete-password">Ingresa tu contraseña para confirmar:</label>
                    <input type="password" id="confirm-delete-password" required>
                </div>
                <div class="modal-actions">
                    <button class="btn" onclick="hideDeleteConfirmation()">Cancelar</button>
                    <button class="btn btn-danger" onclick="deleteAccount()">Confirmar Eliminación</button>
                </div>
            </div>
        </div>
    </div>

    <script>

        function showDeleteConfirmation() {
            Swal.fire({
                title: '¿Eliminar cuenta?',
                html: `
                    <p>Esta acción eliminará permanentemente tu cuenta y todo su contenido.</p>
                    <p><strong>Esta acción no se puede deshacer.</strong></p>
                `,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: 'var(--secondary-color)',
                confirmButtonText: 'Eliminar mi cuenta',
                cancelButtonText: 'Cancelar',
                focusCancel: true
            }).then((result) => {
                if (result.isConfirmed) {
                    
                    Swal.fire({
                        title: 'Eliminando cuenta...',
                        text: 'Por favor espera',
                        allowOutsideClick: false,
                        showConfirmButton: false,
                        willOpen: () => {
                            Swal.showLoading();
                        }
                    });

                    
                    fetch('/User/EliminarCuenta', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Error en la solicitud, estado: ' + response.status);
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                title: '¡Cuenta eliminada!',
                                text: 'Tu cuenta ha sido eliminada correctamente.',
                                icon: 'success',
                                confirmButtonColor: 'var(--primary-color)',
                                confirmButtonText: 'Aceptar'
                            }).then(() => {
                                window.location.href = '/User/Login';
                            });
                        } else {
                            Swal.fire({
                                title: 'Error',
                                text: data.message || 'Ocurrió un error al eliminar la cuenta.',
                                icon: 'error',
                                confirmButtonColor: 'var(--primary-color)',
                                confirmButtonText: 'Aceptar'
                            });
                        }
                    })
                    .catch(error => {
                        Swal.fire({
                            title: 'Error',
                            text: 'Ocurrió un error: ' + error.message,
                            icon: 'error',
                            confirmButtonColor: 'var(--primary-color)',
                            confirmButtonText: 'Aceptar'
                        });
                    });
                }
            });
        }



        function toggleSecurity() {
            const securitySection = document.getElementById('seguridad');
            const securityButton = document.getElementById('security-btn');

            if (securitySection.style.display === 'block') {
                securitySection.style.display = 'none';
                securityButton.textContent = 'Seguridad de la cuenta';
            } else {
                securitySection.style.display = 'block';
                securityButton.textContent = 'Ocultar seguridad';
                securitySection.scrollIntoView({ behavior: 'smooth' });
            }
        }

        function deletePost(postId) {
            Swal.fire({
                title: '¿Estás seguro?',
                text: "No podrás revertir esta acción",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: 'var(--primary-color)',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Sí, eliminar',
                cancelButtonText: 'Cancelar',
                background: 'var(--light-bg)',
                borderRadius: 'var(--border-radius)',
                customClass: {
                    popup: 'animated zoomIn'
                },
                animation: true
            }).then((result) => {
                if (result.isConfirmed) {
                    // Mostrar indicador de carga mientras se procesa
                    Swal.fire({
                        title: 'Eliminando...',
                        text: 'Por favor espera',
                        allowOutsideClick: false,
                        showConfirmButton: false,
                        willOpen: () => {
                            Swal.showLoading();
                        }
                    });

                    fetch('/User/DeletePost', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ postId: postId })
                    })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Error en la solicitud, estado: ' + response.status);
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                title: '¡Eliminado!',
                                text: 'Tu post ha sido eliminado correctamente.',
                                icon: 'success',
                                confirmButtonColor: 'var(--primary-color)',
                                confirmButtonText: 'Aceptar'
                            }).then(() => {
                                location.reload(); // Recargar la página
                            });
                        } else {
                            Swal.fire({
                                title: 'Error',
                                text: data.message,
                                icon: 'error',
                                confirmButtonColor: 'var(--primary-color)',
                                confirmButtonText: 'Aceptar'
                            });
                        }
                    })
                    .catch(error => {
                        Swal.fire({
                            title: 'Error',
                            text: 'Ocurrió un error: ' + error.message,
                            icon: 'error',
                            confirmButtonColor: 'var(--primary-color)',
                            confirmButtonText: 'Aceptar'
                        });
                    });
                }
            });
        }

        // También vamos a mejorar el popup para eliminar cuenta
        // function showDeleteConfirmation() {
        //     Swal.fire({
        //         title: '¿Eliminar cuenta?',
        //         html: `
        //             <p>Esta acción eliminará permanentemente tu cuenta y todo su contenido.</p>
        //             <p><strong>Esta acción no se puede deshacer.</strong></p>
        //             <div class="form-group" style="margin-top: 20px;">
        //                 <label for="confirm-delete-password">Ingresa tu contraseña para confirmar:</label>
        //                 <input type="password" id="confirm-delete-password" class="swal2-input" required>
        //             </div>
        //         `,
        //         icon: 'warning',
        //         showCancelButton: true,
        //         confirmButtonColor: '#d33',
        //         cancelButtonColor: 'var(--secondary-color)',
        //         confirmButtonText: 'Eliminar mi cuenta',
        //         cancelButtonText: 'Cancelar',
        //         focusCancel: true,
        //         preConfirm: () => {
        //             const password = document.getElementById('confirm-delete-password').value;
        //             if (!password) {
        //                 Swal.showValidationMessage('Por favor, introduce tu contraseña para confirmar');
        //                 return false;
        //             }
        //             return password;
        //         }
        //     }).then((result) => {
        //         if (result.isConfirmed) {
        //             Aquí puedes enviar la contraseña y proceder con la eliminación
        //             Ejemplo básico:
        //             Swal.fire({
        //                 title: 'Cuenta eliminada',
        //                 text: 'Tu cuenta ha sido eliminada correctamente',
        //                 icon: 'success',
        //                 confirmButtonColor: 'var(--primary-color)'
        //             }).then(() => {
        //                 Redireccionar a la página principal o de logout
        //                 window.location.href = '/';
        //             });
        //         }
        //     });
        // }

        // También mejoramos el manejo del cambio de contraseña
        document.getElementById('password-form').addEventListener('submit', function(e) {
            e.preventDefault();

            const currentPassword = document.getElementById('current-password').value;
            const newPassword = document.getElementById('new-password').value;
            const confirmPassword = document.getElementById('confirm-password').value;

            if (newPassword !== confirmPassword) {
                Swal.fire({
                    title: 'Error',
                    text: 'Las contraseñas nuevas no coinciden',
                    icon: 'error',
                    confirmButtonColor: 'var(--primary-color)'
                });
                return;
            }

            Swal.fire({
                title: 'Actualizando contraseña...',
                text: 'Por favor espera',
                allowOutsideClick: false,
                showConfirmButton: false,
                willOpen: () => {
                    Swal.showLoading();
                }
            });

            const formData = new FormData();
            formData.append('currentPassword', currentPassword);
            formData.append('newPassword', newPassword);

            fetch('/User/CambiarContraseña', {
                method: 'POST',
                body: formData
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Error en la solicitud, estado: ' + response.status);
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        title: '¡Éxito!',
                        text: data.message,
                        icon: 'success',
                        confirmButtonColor: 'var(--primary-color)'
                    }).then(() => {
                        this.reset(); // Limpiar el formulario
                        document.getElementById('seguridad').style.display = 'none';
                        document.getElementById('security-btn').textContent = 'Seguridad de la cuenta';
                    });
                } else {
                    Swal.fire({
                        title: 'Error',
                        text: data.message,
                        icon: 'error',
                        confirmButtonColor: 'var(--primary-color)'
                    });
                }
            })
            .catch(error => {
                Swal.fire({
                    title: 'Error',
                    text: 'Ocurrió un error: ' + error.message,
                    icon: 'error',
                    confirmButtonColor: 'var(--primary-color)'
                });
            });
        });
    </script>
</body>